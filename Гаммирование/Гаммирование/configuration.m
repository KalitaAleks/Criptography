x=-10:0.1:10;                         % значения вектора х и его шаг
y=-10:0.1:10;                         %значения вектора у и его шаг
[X1, X2]=meshgrid(x, y);              % Матрица х:у все точки на плоскости ХУ
z = fun_conf(X1,X2);                  % Находим все значения функции
v=[1,4];                              

 figure                               % Строим плоскость 
 mesh(X1,X2,z);
hold on; 
 grid on;
figure                                % Строим график контура
contour(X1,X2,z,v);                   
hold on;
grid on;
axis([0 10 0 11]);
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Начало метода минимизации
d=1         % Начальный шаг
A=8         %  А и В начальные координаты точки 
B=9
L=2         % Ускорение шага
a=0.5       % Замедление шага
e=0.0003    % Требуемая точность
direction=0; % Текушее направление
last_direction=0; % прошлое направление
while d>e            % пока шаг больше точности выполняем цикл
F =fun_conf(A,B)   % Высчитываем значение Функции в начальной точке
F1=fun_conf(A+d,B)   % Вычислаем значение функции в точке по аправлению (1,0)
F2=fun_conf(A, B+d)  % Вычисляем значение функции по напрвлени (0,1)
F3=fun_conf(A-d,B)   % Вычисляем значение функции в точке по напрвлению (-1, 0)
F4=fun_conf(A, B-d)    % Вычисляем значение функции по напрвлени (0,-1)
Fi=min([F,F1,F2,F3,F4]) % Выбираем минимальную функцию
comet(A,B)               % Изображаем точку на графике
if Fi==F1                % если минимальное равно F1 
     direction=1          % Задаем направление (1,0)
if last_direction~=direction % Если прошлое наплавление не равно текущему направлению 
    d=1                      % шаг возвращяем в начальное значение
end
    A=A+d                    %Задаем координаты новой точки
    B=B
    d=d*L % Увеличиваем (Ускоряем) шаг
  comet(A,B)
end
if Fi==F2                  
    direction=2                   % Задаем направление (0,1)
    if last_direction~=direction
    d=1
    end
    A=A
    B=B+d
    d=d*L
   comet(A,B)
end
if Fi==F3 %Задаем напрвление (-1,0)
    direction=3
    if last_direction~=direction
      d=1
    end
    A=A-d
    B=B
    d=d*L
  comet(A,B)
end
if Fi==F4       % Задаем направление (0,-1)
    direction=4
    if last_direction~=direction
       d=1
    end
    A=A
    B=B-d
    d=d*L
   comet(A,B)
end
if Fi==F                          % если минимальное значение в текушей точке 
    direction=0                   % Остаемся в ней
    if last_direction~=direction
    d=1
    end
A=A
B=B
    d=d*a                   % Уменьшаем(замедляем) шаг 
  end
last_direction=direction     % Прошлое направление = текущему напрвалению
% pause(10)                  % пауза 10 сек. не обязательна но если хотите
                             % видеть значения переходов от точки к точке включите
end                           % Завершаем цикл
 


    


 
